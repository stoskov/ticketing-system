@using System.Web.Mvc.Html;

@model TicketsSummaryContainer

@{
    this.ViewBag.Title = "All Tickets";
}

<div class="row-fluid">
    <div class="span12">
        <h2>All Tickets</h2>
    </div>
</div>

<div class="row-fluid">
    <div class="ticket-filter input-append span10">
        <input class="span11" id="q" type="text" value='@this.Model.Filter.Q'>
        <button class="btn btn-primary" id="q-button" type="button">Search</button>
    </div>
    <div class="span2">
        <div class="ticket-actions clearfix">
            <a class="btn btn-primary" href='@Url.Action("Index")'>Clear filters</a>
        </div>
    </div>
</div>

<div class="row-fluid">
    <table class="gridview">
        <tr>
            <th class="filter ticket-header">
                @this.Html.DisplayNameFor(model => ((TicketSummaryViewModel)model.TicketsList).Title)
                <div class="ticket-filter">
                    @Html.DropDownList("Title", new SelectList(this.Model.TitlesList, "Value", "Text", this.Model.Filter.Title))
                </div>
            </th>
            <th class="filter ticket-header">
                @this.Html.DisplayNameFor(model => ((TicketSummaryViewModel)model.TicketsList).CategoryName)
                <div class="ticket-filter">
                    @Html.DropDownList("CategoryId", new SelectList(this.Model.CategoriesList, "Value", "Text", this.Model.Filter.CategoryId))
                </div>
            </th>
            <th class="filter ticket-header">
                @this.Html.DisplayNameFor(model => ((TicketSummaryViewModel)model.TicketsList).AuthorName)
                <div class="ticket-filter">
                    @Html.DropDownList("AuthorId", new SelectList(this.Model.AuthorsList, "Value", "Text", this.Model.Filter.AuthorId))
                </div>
            </th>
            <th class="filter ticket-header">
                @this.Html.DisplayNameFor(model => ((TicketSummaryViewModel)model.TicketsList).Priority)
                <div class="ticket-filter">
                    @Html.DropDownList("Priority", new SelectList(this.Model.PrioritiesList, "Value", "Text", this.Model.Filter.Priority))
                </div>
            </th>
            <th class="filter ticket-header">
                @this.Html.DisplayNameFor(model => ((TicketSummaryViewModel)model.TicketsList).Status)
                <div class="ticket-filter">
                    @Html.DropDownList("Status", new SelectList(this.Model.StatuesList, "Value", "Text", this.Model.Filter.Status))
                </div>
            </th>
        </tr>

        @foreach (var item in this.Model.TicketsList)
        {
            <tr>
                <td>
                    <a href='@Url.Action("Details", new { id = item.Id })'>
                        @item.Title
                    </a>
                </td>
                <td>
                    @this.Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @this.Html.DisplayFor(modelItem => item.AuthorName)
                </td>
                <td>
                    @this.Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @this.Html.DisplayFor(modelItem => item.Status)
                </td>
            </tr>
        }
    </table>

    <div class="row-fluid">
        <span class="span2">Results: @this.Model.TicketsList.Count()</span>
    </div>

    <div class="pagination">
        <ul>
            @for (int i = 1; i <= this.ViewBag.Pages; i++)
            {
                <li> @this.Html.ActionLink(i.ToString(), "ListAll", new { id = i, category = 1 }) </li>
            }
        </ul>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function setFilter(filter, value) {
            var regex = new RegExp("(" + filter + "=[\\w\\W]*?)(&|$)", "i"),
                queryString = window.location.search;

            if (regex.test(queryString)) {
                queryString = queryString.replace(regex, function (a, b, c) {
                    return filter + "=" + value + c
                });
            }
            else if (queryString.length > 1) {
                queryString = queryString + "&" + filter + "=" + value;
            }
            else {
                queryString = queryString + "?" + filter + "=" + value;
            }

            window.location.search = queryString;
        }

        $(function () {
            $(".ticket-filter > select").on("change", function (e) {
                var value = e.target.value,
                    filter = e.target.id;

                setFilter(filter, value);
            });

            $("#q-button").on("click", function () {
                var element = $("#q")[0],
                    value = element.value,
                    filter = element.id;

                setFilter(filter, value);
            });

            $("#q").on("keypress", function (e) {
                var element = $("#q")[0],
                    value = element.value,
                    filter = element.id;

                if (e.keyCode === 13) {
                    setFilter(filter, value);
                }
            });
        });
    </script>
}
