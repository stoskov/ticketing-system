@using System.Web.Mvc.Html;
@using TicketingSystem.Web.Models.Base;

@model TicketsFilterableViewModel

@{
    this.ViewBag.Title = "All Tickets";
}

<div class="page page-tickets-list">

    <div class="row-fluid ticket-main-title-wrap">
        <div class="span10">
            <h3>All Tickets</h3>
        </div>
        <div class="span2 clearfix ticket-actions">
            <a class="right" href='@Url.Action("Create")'>New Ticket</a>
        </div>
    </div>

    <div class="row-fluid">
        <div class="input-append span10">
            <input class="span11" id="q" type="text" value='@this.Model.Filter.Q'>
            <button class="btn btn-primary" id="q-button" type="button">Search</button>
        </div>
        <div class="span2">
            <div class="right clearfix">
                <a class="btn btn-primary" href='@Url.Action("Index")'>Clear filters</a>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <table class="gridview">
            <tr>
                <th class="tickets-list header title">
                    @this.Html.DisplayNameFor(model => ((TicketViewModel)model.TicketsList).Title)
                    <div class="tickets-list filter">
                        @Html.DropDownList("Title", new SelectList(this.Model.MetaData.TitlesList, "Value", "Text", this.Model.Filter.Title))
                    </div>
                </th>
                <th class="tickets-list header category">
                    @this.Html.DisplayNameFor(model => ((TicketViewModel)model.TicketsList).CategoryName)
                    <div class="tickets-list filter">
                        @Html.DropDownList("CategoryId", new SelectList(this.Model.MetaData.CategoriesList, "Value", "Text", this.Model.Filter.CategoryId))
                    </div>
                </th>
                <th class="tickets-list header author">
                    @this.Html.DisplayNameFor(model => ((TicketViewModel)model.TicketsList).AuthorName)
                    <div class="tickets-list filter">
                        @Html.DropDownList("AuthorId", new SelectList(this.Model.MetaData.AuthorsList, "Value", "Text", this.Model.Filter.AuthorId))
                    </div>
                </th>
                <th class="tickets-list header priority">
                    @this.Html.DisplayNameFor(model => ((TicketViewModel)model.TicketsList).Priority)
                    <div class="tickets-list filter">
                        @Html.DropDownList("Priority", new SelectList(this.Model.MetaData.PrioritiesList, "Value", "Text", this.Model.Filter.Priority))
                    </div>
                </th>
                <th class="tickets-list header status">
                    @this.Html.DisplayNameFor(model => ((TicketViewModel)model.TicketsList).Status)
                    <div class="tickets-list filter">
                        @Html.DropDownList("Status", new SelectList(this.Model.MetaData.StatusesList, "Value", "Text", this.Model.Filter.Status))
                    </div>
                </th>
            </tr>

            @foreach (var item in this.Model.TicketsList)
            {
                <tr>
                    <td class="tickets-list content title">
                        <a href='@Url.Action("Details", new { id = item.Id })'>
                            @item.Title
                        </a>
                    </td>
                    <td class="tickets-list content category">
                        @this.Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td class="tickets-list content author">
                        @this.Html.DisplayFor(modelItem => item.AuthorName)
                    </td>
                    <td class="tickets-list content priority">
                        @this.Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td class="tickets-list content status">
                        @this.Html.DisplayFor(modelItem => item.Status)
                    </td>
                </tr>
            }
        </table>

        <div class="row-fluid">
            <span class="right">Results: @this.Model.TotalRecordsCount</span>
        </div>

        @Html.Paging(new PagingOptions { QueryParameterName = "page", LastPage = this.Model.PagesCount, wrapperClasses = "pagination-right" })

    </div>

</div>

@section scripts{
    <script type="text/javascript">
        function setFilter(filter, value) {
            var regex = new RegExp("(" + filter + "=[\\w\\W]*?)(&|$)", "i"),
                queryString = window.location.search;

            if (regex.test(queryString)) {
                queryString = queryString.replace(regex, function (a, b, c) {
                    return filter + "=" + value + c
                });
            }
            else if (queryString.length > 1) {
                queryString = queryString + "&" + filter + "=" + value;
            }
            else {
                queryString = queryString + "?" + filter + "=" + value;
            }

            window.location.search = queryString;
        }

        $(function () {
            $(".filter > select").on("change", function (e) {
                var value = e.target.value,
                    filter = e.target.id;

                setFilter(filter, value);
            });

            $("#q-button").on("click", function () {
                var element = $("#q")[0],
                    value = element.value,
                    filter = element.id;

                setFilter(filter, value);
            });

            $("#q").on("keypress", function (e) {
                var element = $("#q")[0],
                    value = element.value,
                    filter = element.id;

                if (e.keyCode === 13) {
                    setFilter(filter, value);
                }
            });
        });
    </script>
}
